version: 2.1

executors:
  default:
    machine:
      image: ubuntu-2404:2024.05.1

parameters:
  # We define a version of the optimism-package as a pipeline parameter
  # 
  # This allows us to test not only changes to chain components but also changes
  # to optimism-package (by running this workflow with a specific commit for example)
  optimism-package-ref:
    type: string
    description: The git ref (commit hash, branch name or a tag) of optimism-package to use
    default: main

workflows:
  # This workflow runs basic checks on this repository
  check:
    jobs:
      - go-lint
  # This is the workflow responsible for running the devnet-sdk-powered tests
  devnet-tests:
    jobs:
      - run-devnet-tests:
          matrix:
            parameters:
              args-file:
                - ./systems/kurtosis/barebones_devnet.yaml

commands:
  # This command installs global software dependencies defined in mise.toml
  install-dependencies:
    steps:
      - run:
          name: Install mise
          command: curl https://mise.run | MISE_INSTALL_PATH=/home/circleci/bin/mise sh
      - run:
          name: Activate mise
          command: echo 'eval "$(mise activate bash)"' >> $BASH_ENV
      - run:
          name: Install mise dependencies
          command: mise install

  # This command installs required go modules
  install-go-modules:
    parameters:
      from:
        description: Path to go.sum file
        type: string
        default: go.sum
      path:
        description: Go module cache path
        type: string
        default: /home/circleci/.go_workspace/pkg/mod
      version:
        description: Version (cache breaker)
        type: string
        default: v1
    steps:
      - restore_cache:
          name: Restore Go modules cache
          keys:
            - go-mod-{{ arch }}-{{ checksum "<< parameters.from >>" }}-<< parameters.version >>
      - run:
          name: Download Go modules
          command: go mod download
      - save_cache:
          key: go-mod-{{ arch }}-{{ checksum "<< parameters.from >>" }}-<< parameters.version >>
          paths:
              - << parameters.path >>

  # This command will start a kurtosis enclave based on the provided parameters
  # 
  # After the enclave has started, a DEVNET_ENV_URL environment variable is exported.
  # This environment variable is consumed by the devnet-sdk test runner.
  start-kurtosis-devnet:
    parameters:
      # Kurtosis arguments file is the only mandatory parameter
      args-file:
        type: string
        description: Path to kurtosis args file
      # Enclave name is optional and can be passed if multiple enclaves need to run at the same time
      enclave-name:
        type: string
        description: Kurtosis enclave name
        default: devnet
      # Kurtosis package is optional - we normally want to use github.com/ethpandaops/optimism-package
      # with the version defined by the pipeline
      package:
        type: string
        description: Kurtosis package to use
        default: github.com/ethpandaops/optimism-package@<< pipeline.parameters.optimism-package-ref >>
    steps:
      - run:
          name: Start kurtosis devnet
          command: kurtosis run --enclave << parameters.enclave-name >> << parameters.package >> --args-file << parameters.args-file >>
      - run:
          name: Export devnet-sdk environment URL
          command: echo "export DEVNET_ENV_URL=ktnative://<< parameters.enclave-name >>$(realpath << parameters.args-file >>)" >> $BASH_ENV
      - run:
          name: Show devnet-sdk environment URL
          command: echo "Using devnet environment from $DEVNET_ENV_URL"

jobs:
  go-lint:
    executor: default
    steps:
      - checkout
      - install-dependencies
      - install-go-modules
      - run:
          name: Check go.mod
          command: |
            just tidy
            git diff --exit-code
      - run:
          name: Run lint
          command: just lint
  
  run-devnet-tests:
    executor: default
    parameters:
      args-file:
        type: string
        description: Path to kurtosis args file
    steps:
      - checkout
      - install-dependencies
      - install-go-modules
      - start-kurtosis-devnet:
          args-file: << parameters.args-file >>
      - run:
          name: Run tests
          command: just test
            